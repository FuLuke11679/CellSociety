package cellsociety.parser;

import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class GeneralConwayParser {

  /**
   * Extracts the rules from the rule string
   * @param ruleString The string that contains the birth and survival rules
   * @param birthVals The set that will contain the values of alive neighbors that warrant survival
   * @param survivalVals The set that will contain the values of alive neighbors that warrant birth
   *
   * CREDIT: This function was generated by an AI assistant
   */
  public static void parseRuleString(String ruleString, Set<Integer> birthVals, Set<Integer> survivalVals) {
    // Regex to match "B<number>/S<number>"
    Pattern pattern = Pattern.compile("B(\\d*)/S(\\d*)");
    Matcher matcher = pattern.matcher(ruleString);

    if (matcher.matches()) {
      // Extract birth numbers into birthVals HashSet
      for (char c : matcher.group(1).toCharArray()) {
        birthVals.add(c - '0');
      }
      // Extract survival numbers into survivalVals HashSet
      for (char c : matcher.group(2).toCharArray()) {
        survivalVals.add(c - '0');
      }
    }
  }

}
